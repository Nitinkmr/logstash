input {
	jdbc {
		jdbc_driver_library => ""
		jdbc_connection_string => "jdbc:oracle:thin:@10.56.110.129:1521/CLONEDB"
		jdbc_user => "reader"
		jdbc_password => "reader"
		jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
		statement => "SELECT tbl1.cod_cust_id, TO_CHAR(tbl1.dat_cust_open,'yyyy-mm-dd') AS dat_cust_open, tbl1.flg_cust_typ, tbl1.cif_type, tbl1.flg_staff, tbl1.cod_employee_id, tbl1.cod_cc_homebrn, tbl1.cod_officr_id, tbl1.nam_cust_shrt, tbl1.txt_cust_prefix, tbl1.nam_cust_full, tbl1.nam_cust_last, tbl1.nam_cust_mid, tbl1.nam_cust_first, tbl1.cod_cust_stat, tbl1.flg_ic_typ, tbl1.cod_cust_natl_id, tbl1.cod_cust_lang, tbl1.cod_income_cat, tbl1.txt_profess_cat, tbl1.ref_cust_it_num, tbl1.nam_custadr_city, tbl1.nam_custadr_state, tbl1.nam_custadr_cntry, tbl1.txt_custadr_zip, tbl1.ref_cust_email, tbl1.nam_permadr_city, tbl1.nam_permadr_cntry, tbl1.nam_permadr_state, tbl1.txt_permadr_zip, TO_CHAR(tbl1.dat_birth_cust,'yyyy-mm-dd') AS dat_birth_cust, tbl1.txt_cust_sex, tbl1.cod_cust_marstat, tbl1.txt_cust_natnlty, tbl1.cod_kyc_status, tbl1.ref_phone_mobile, tbl1.flg_blocked, tbl1.nam_mother_maiden, tbl1.cod_aadhaar_no, tbl2.cod_cc_brn, TO_CHAR(tbl2.dat_acct_open,'yyyy-mm-dd') AS dat_acct_open, tbl2.cod_acct_title, tbl2.cod_acct_stat, TRIM(tbl2.cod_acct_no) AS cod_acct_no, tbl2.cod_prod, tbl3.local_address_line1, tbl3.local_address_line2, tbl3.local_address_line3, tbl3.perm_address_line1, tbl3.perm_address_line2, tbl3.perm_address_line3, tbl3.cod_category, tbl3.local_district, tbl3.permanent_district, tbl3.poi_type, tbl3.poi_number, tbl3.poi_issuing_authority, tbl3.POI_DATE_OFISSUE, tbl3.poi_date_ofexpiry, tbl3.POI_PLACE_OFISSUE, tbl3.POA_TYPE, tbl3.POA_NUMBER, tbl3.POA_ISSUING_AUTHORITY, tbl3.POA_DATE_OFISSUE, tbl3.POA_DATE_OFEXPIRY, tbl3.POA_PLACE_OFISSUE, tbl3.poa_type, tbl3.poa_number, tbl3.poa_issuing_authority, tbl3.circle, tbl3.custom_fields_1, tbl3.custom_fields_2, tbl3.custom_fields_3, tbl3.custom_fields_4, tbl3.custom_fields_5, tbl3.custom_fields_6, tbl3.custom_fields_7, tbl3.custom_fields_8, tbl3.custom_fields_9, tbl3.custom_fields_10, tbl3.custom_fields_11, tbl3.custom_fields_12, tbl3.custom_fields_13, tbl3.custom_fields_14, tbl3.custom_fields_15, tbl3.local_address_line4, tbl3.perm_address_line4, tbl3.COD_CATEGORY, tbl3.FLG_MNT_STATUS, tbl3.PARENT_TYPE, tbl3.PARENT_ID FROM fcrhost.ci_custmast tbl1 LEFT JOIN fcrhost.ch_acct_mast tbl2 ON tbl1.cod_cust_id = tbl2.cod_cust AND tbl2.cod_prod BETWEEN 2000 AND 3000 LEFT JOIN fcrhost.ci_x_scm_seg_details tbl3 ON tbl1.cod_cust_id = tbl3.cod_cust_id WHERE tbl1.flg_mnt_status = 'A' AND tbl2.flg_mnt_status = 'A' AND tbl3.flg_mnt_status = 'A' ORDER BY tbl2.dat_acct_open"
	}
}
filter {
	mutate {
		rename => {
			"cod_cust_id" => "custId"
			"dat_birth_cust" => "dob"
			"dat_cust_open" => "creationDate"
			"flg_cust_typ" => "custType"
			"cif_type" => "cifType"
			"flg_staff" => "[employment][staff]"
			"cod_employee_id" => "[employment][employeeId]"
			"txt_profess_cat" => "[employment][profession]"
			"ref_cust_email" => "[emailDetails][primary]"
			"ref_phone_mobile" => "[mobileNumberDetails][secondary]"
			"cod_cc_homebrn" => "branch"
			"cod_officr_id" => "officerId"
			"nam_cust_shrt" => "[name][shortName]" 
			"txt_cust_prefix" => "[name][prefix]"
			"nam_cust_full" => "[name][full]"
			"nam_cust_last" => "[name][last]"
			"nam_cust_mid" => "[name][mid]"
			"nam_cust_first" => "[name][first]"
			"cod_cust_stat" => "status"
			"flg_ic_typ" => "icType"
			"cod_cust_natl_id" => "natlId"
			"cod_cust_lang" => "lang"
			"txt_cust_sex" => "gender"
			"cod_cust_marstat" => "maritalStatus"
			"txt_cust_natnlty" => "nationality"
			"cod_kyc_status" => "kycStatus"
			"flg_blocked" => "flgBlocked"
			"nam_mother_maiden" => "motherName"
			"cod_cc_brn" => "[accounts][fky][branch]"
			"cod_acct_title" => "[accounts][fky][title]"
			"cod_acct_stat" => "[accounts][fky][status]"
			"cod_acct_no" => "[accounts][fky][number]"
			"cod_prod" => "[accounts][fky][productCode]"
			"dat_acct_open" => "[accounts][fky][openDate]"
			"nam_custadr_city" => "[addresses][local][city]"
			"txt_custadr_zip" => "[addresses][local][pincode]"
			"nam_permadr_city" => "[addresses][permanent][city]"
			"txt_permadr_zip" => "[addresses][permanent][pincode]"
			"local_address_line1" => "[addresses][local][line1]"
			"local_address_line2" => "[addresses][local][line2]"
			"local_address_line3" => "[addresses][local][line3]"
			"local_address_line4" => "[addresses][local][line4]"
			"local_district" => "[addresses][local][district]"
			"perm_address_line1" => "[addresses][permanent][line1]"
			"perm_address_line2" => "[addresses][permanent][line2]"
			"perm_address_line3" => "[addresses][permanent][line3]"
			"perm_address_line4" => "[addresses][permanent][line4]" 
			"permanent_district" => "[addresses][permanent][district]"
			"custom_fields_14" => "[addresses][permanent][vtc]"
			"cod_category" => "category"
			"csp_natl_code" => "cspNatl"
			"csp_customer_segment" => "cspSegment"
			"amount_first_cashin" => "fciAmount"
			"csp_mobile_phone" => "cspMobile"
			"reg_status" => "regStatus"
			"card_type" => "cardType"
			"mobility_user_type" => "mobileType"
			"circle" => "circle"
			"politically_exposed_person" => "pep"
			"flg_kyc" => "kycFlag"
			"e_sign" => "eSign"
			"custom_fields_4" => "cafForm60PdfPath"
			"custom_fields_5" => "msme"
			"custom_fields_6" => "sweepAccountFlag"
			"custom_fields_7" => "cKyc"
			"custom_fields_8" => "txnId"
			"custom_fields_9" => "customFld9"
			"custom_fields_10" => "corrAddressSameAsPermAddress"
			"custom_fields_11" => "poaTypePhotoName"
			"custom_fields_13" => "customFciAmount"
		}
		
		add_field => {
			"fkyAcctNo" => "%{[accounts][fky][number]}"
			"[mobileNumberDetails][primary]" => "%{natlId}"
		}

		convert => {
			"poi_type" => "string"
			"poi_number" => "string"
			"poa_type" => "string"
			"poa_number" => "string"
			"cod_aadhaar_no" => "string"
			"ref_cust_it_num" => "string"
		}

		uppercase => ["poi_number", "poa_number", "POI_PLACE_OFISSUE", "POA_PLACE_OFISSUE", "ref_cust_it_num", "nam_custadr_cntry", "nam_permadr_cntry", "nam_custadr_state", "nam_permadr_state"]
	}

	#Set_incomeDetails_category_if_not_null
	if [cod_income_cat] and [cod_income_cat] != "null" {
		mutate {
			rename => {
				"cod_income_cat" => "[incomeDetails][category]"
			}
		}
	}

	

	#Set_dtrOpted_flag_if_not_null
	if [custom_fields_2] and [custom_fields_2] != "null" {
		mutate {
			rename => {
				"custom_fields_2" => "[benefits][dtrOpted]"
			}
		}
	}

	#Set_dbtOpted_flag_if_not_null
	if [custom_fields_3] and [custom_fields_3] != "null" {
		mutate {
			rename => {
				"custom_fields_3" => "[benefits][dbtOpted]"
			}
		}
	}

	#Set_riskProfile_score_if_not_null
	if [custom_fields_1] and [custom_fields_1] != "null" {
		mutate {
			rename => {
				"custom_fields_1" => "[riskProfile][score]"
			}
		}
	}

	#Local_Address_Country_Name_Correction
	if [nam_custadr_cntry] and [nam_custadr_cntry] != "null" and [nam_custadr_cntry] != "IN" {
		mutate {
			add_field => {
				"[addresses][local][country]" => "IN"
			}
			remove_field => [nam_custadr_cntry]
		}
	} else {
		mutate {
			rename => {
				"nam_custadr_cntry" => "[addresses][local][country]"
			}
		}
	}

	#Local_Address_State_Name_Correction
	if [nam_custadr_state] and [nam_custadr_state] != "null" {
		if [nam_custadr_state] == "U.P" {
			mutate {
				add_field => {
					"[addresses][local][state]" => "UTTAR PRADESH"
				}
				remove_field => [nam_custadr_state]
			}
		} else {
			mutate {
				rename => {
					"nam_custadr_state" => "[addresses][local][state]"
				}
			}
		}
	} else {
		mutate {
			rename => {
				"nam_custadr_state" => "[addresses][local][state]"
			}
		}
	}

	#Permanent_Address_Country_Name_Correction
	if [nam_permadr_cntry] and [nam_permadr_cntry] != "null" and [nam_permadr_cntry] != "IN" {
		mutate {
			add_field => {
				"[addresses][permanent][country]" => "IN"
			}
			remove_field => [nam_permadr_cntry]
		}
	} else {
		mutate {
			rename => {
				"nam_permadr_cntry" => "[addresses][permanent][country]"
			}
		}
	}

	if [poa_type] and [poa_type] != "null" and [poa_number] and [poa_number] != "null" {
		cipher {
			algorithm => "aes-256-cbc"
			cipher_padding => 1
			iv_random_length => 16
			key => "77272835874276052258888235602428"
			key_size => 32
			mode => "encrypt"
			source => "[poa_number]"
			target => "[poa_number]"
			max_cipher_reuse => 1000
		}

		mutate {
			add_field => {
				"poaNumber" => "%{[poa_number]}"
			}
		}

		if [poa_type] == "AAD" or [poa_type] == "AADHAAR" or [poa_type] == "AADHAAR ID" or [poa_type] == "AADHAARID" or [poa_type] == "Aadhaar" or [poa_type] == "Aadhaar ID" or [poa_type] == "Aadhaar Id" or [poa_type] == "Aadhar Card" or [poa_type] == "aadhaar" or [poa_type] == "aadhaarId" {
			mutate {
				rename => {
					"poa_number" => "[identities][aadhaar][id]" 
					"poa_issuing_authority" => "[identities][aadhaar][issueAuthority]" 
					"POA_DATE_OFISSUE" => "[identities][aadhaar][issueDate]" 
					"POA_PLACE_OFISSUE" => "[identities][aadhaar][issuePlace]" 
					"POA_DATE_OFEXPIRY" => "[identities][aadhaar][expiryDate]" 
				}
			}

			ruby {
				code => "
					event.set('poaType','AADHAAR ID')
					event.set('[identities][aadhaar][type]','AADHAAR ID')
					event.set('[identities][aadhaar][isPoi]','N')
					event.set('[identities][aadhaar][isPoa]','Y')
				"
			}
		}

		if [poa_type] == "PAN" or [poa_type] == "Pan Card" or [poa_type] == "PAN NUMBER" {
			mutate {
				rename => {
					"poa_number" => "[identities][pan][id]" 
					"poa_issuing_authority" => "[identities][pan][issueAuthority]" 
					"POA_DATE_OFISSUE" => "[identities][pan][issueDate]" 
					"POA_PLACE_OFISSUE" => "[identities][pan][issuePlace]" 
					"POA_DATE_OFEXPIRY" => "[identities][pan][expiryDate]" 
					"pan_ack_number" => "[identities][pan][ackNumber]"
					"pan_status" => "[identities][pan][status]"
					"dat_pan_application" => "[identities][pan][applicationDate]"
				}
			}

			ruby {
				code => "
					event.set('poaType','PAN NUMBER')
					event.set('[identities][pan][type]','PAN NUMBER')
					event.set('[identities][pan][isPoi]','N')
					event.set('[identities][pan][isPoa]','Y')
				"
			}
		}

		if [poa_type] == "DL" or [poa_type] == "DRIVING LICENSE" or [poa_type] == "Driving license" or [poa_type] == "DRIVING_LICENCE" or [poa_type] == "DRIVING_LICENSE" {
			mutate {
				rename => {
					"poa_number" => "[identities][drivingLicence][id]" 
					"poa_issuing_authority" => "[identities][drivingLicence][issueAuthority]" 
					"POA_DATE_OFISSUE" => "[identities][drivingLicence][issueDate]" 
					"POA_PLACE_OFISSUE" => "[identities][drivingLicence][issuePlace]" 
					"POA_DATE_OFEXPIRY" => "[identities][drivingLicence][expiryDate]" 
				}
			}

			ruby {
				code => "
					event.set('poaType','DRIVING LICENCE')
					event.set('[identities][drivingLicence][type]','DRIVING LICENCE')
					event.set('[identities][drivingLicence][isPoi]','N')
					event.set('[identities][drivingLicence][isPoa]','Y')
				"
			}
		}

		if [poa_type] == "NREGA" or [poa_type] == "NREGA_ID" {
			mutate {
				rename => {
					"poa_number" => "[identities][nrega][id]" 
					"poa_issuing_authority" => "[identities][nrega][issueAuthority]" 
					"POA_DATE_OFISSUE" => "[identities][nrega][issueDate]" 
					"POA_PLACE_OFISSUE" => "[identities][nrega][issuePlace]" 
					"POA_DATE_OFEXPIRY" => "[identities][nrega][expiryDate]" 
				}
			}

			ruby {
				code => "
					event.set('poaType','NREGA ID')
					event.set('[identities][nrega][type]','NREGA ID')
					event.set('[identities][nrega][isPoi]','N')
					event.set('[identities][nrega][isPoa]','Y')
				"
			}
		}

		if [poa_type] == "PASSPORT" or [poa_type] == "Passport" or [poa_type] == "PP" {
			mutate {
				rename => {
					"poa_number" => "[identities][passport][id]" 
					"poa_issuing_authority" => "[identities][passport][issueAuthority]" 
					"POA_DATE_OFISSUE" => "[identities][passport][issueDate]" 
					"POA_PLACE_OFISSUE" => "[identities][passport][issuePlace]" 
					"POA_DATE_OFEXPIRY" => "[identities][passport][expiryDate]" 
				}
			}

			ruby {
				code => "
					event.set('poaType','PASSPORT')
					event.set('[identities][passport][type]','PASSPORT')
					event.set('[identities][passport][isPoi]','N')
					event.set('[identities][passport][isPoa]','Y')
				"
			}
		}

		if [poa_type] == "VI" or [poa_type] == "VOTE" or [poa_type] == "VOTER" or [poa_type] == "Voter Card" or [poa_type] == "VOTER ID CARD" or [poa_type] == "VOTER_ID" or [poa_type] == "VOTERS" {
			mutate {
				rename => {
					"poa_number" => "[identities][voterCard][id]" 
					"poa_issuing_authority" => "[identities][voterCard][issueAuthority]" 
					"POA_DATE_OFISSUE" => "[identities][voterCard][issueDate]" 
					"POA_PLACE_OFISSUE" => "[identities][voterCard][issuePlace]" 
					"POA_DATE_OFEXPIRY" => "[identities][voterCard][expiryDate]" 
				}
			}

			ruby {
				code => "
					event.set('poaType','VOTER ID')
					event.set('[identities][voterCard][type]','VOTER ID')
					event.set('[identities][voterCard][isPoi]','N')
					event.set('[identities][voterCard][isPoa]','Y')
				"
			}
		}
	}
	
	
}

output {
	elasticsearch {
		hosts => ["10.56.110.235:9200"]
		action => "update"
		doc_as_upsert => "true"
		index => "retailer_profile_test"
		document_id => "%{custId}"
		retry_on_conflict => 5
	}
}
